{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Bem-vindo \u00e0 Documenta\u00e7\u00e3o da API Solid\u00e1ria de Doa\u00e7\u00f5es Esta documenta\u00e7\u00e3o apresenta os detalhes do projeto de backend desenvolvido para facilitar a gest\u00e3o de campanhas solid\u00e1rias. Aqui voc\u00ea encontrar\u00e1: A proposta do projeto; Tecnologias utilizadas; Detalhes de hospedagem; Informa\u00e7\u00f5es sobre os integrantes da equipe. Explore o menu ao lado para saber mais.","title":"In\u00edcio"},{"location":"#bem-vindo-a-documentacao-da-api-solidaria-de-doacoes","text":"Esta documenta\u00e7\u00e3o apresenta os detalhes do projeto de backend desenvolvido para facilitar a gest\u00e3o de campanhas solid\u00e1rias. Aqui voc\u00ea encontrar\u00e1: A proposta do projeto; Tecnologias utilizadas; Detalhes de hospedagem; Informa\u00e7\u00f5es sobre os integrantes da equipe. Explore o menu ao lado para saber mais.","title":"Bem-vindo \u00e0 Documenta\u00e7\u00e3o da API Solid\u00e1ria de Doa\u00e7\u00f5es"},{"location":"apresentacao/","text":"\ud83c\udfaf Apresenta\u00e7\u00e3o do Projeto - API Solid\u00e1ria de Doa\u00e7\u00f5es \ud83d\udccc 1. Problema ONGs, projetos sociais, igrejas e comunidades locais enfrentam desafios como: Falta de controle e organiza\u00e7\u00e3o das campanhas; Perda de informa\u00e7\u00f5es importantes; Dificuldade para mensurar resultados; Falta de transpar\u00eancia com os doadores; Baixa visibilidade de campanhas sociais. \ud83d\udca1 2. Solu\u00e7\u00e3o Criamos uma API RESTful para gerenciamento de campanhas solid\u00e1rias com: Cadastro e edi\u00e7\u00e3o de campanhas; Autentica\u00e7\u00e3o de usu\u00e1rios; Registro de feedbacks; Integra\u00e7\u00e3o com front-ends; Organiza\u00e7\u00e3o centralizada de dados. Ideal para ONGs, escolas e grupos de voluntariado. \u2699\ufe0f 3. Processo de Elabora\u00e7\u00e3o An\u00e1lise de problema e escopo; Modelagem de dados (PostgreSQL); CRUDs com Node.js, Express e Prisma ORM; Separa\u00e7\u00e3o em rotas, controllers, services e middlewares; Autentica\u00e7\u00e3o e autoriza\u00e7\u00e3o; Testes com Jest (mais de 50% de cobertura); Documenta\u00e7\u00e3o Swagger; Deploy com Render + banco Neon. \ud83e\udde0 4. Utilidade do Sistema Gerenciar campanhas; Divulgar locais de doa\u00e7\u00e3o; Organizar categorias de doa\u00e7\u00f5es; Coletar feedbacks; Seguran\u00e7a via controle de usu\u00e1rios. Pronto para integra\u00e7\u00e3o com qualquer frontend.","title":"Apresenta\u00e7\u00e3o"},{"location":"apresentacao/#apresentacao-do-projeto-api-solidaria-de-doacoes","text":"","title":"\ud83c\udfaf Apresenta\u00e7\u00e3o do Projeto - API Solid\u00e1ria de Doa\u00e7\u00f5es"},{"location":"apresentacao/#1-problema","text":"ONGs, projetos sociais, igrejas e comunidades locais enfrentam desafios como: Falta de controle e organiza\u00e7\u00e3o das campanhas; Perda de informa\u00e7\u00f5es importantes; Dificuldade para mensurar resultados; Falta de transpar\u00eancia com os doadores; Baixa visibilidade de campanhas sociais.","title":"\ud83d\udccc 1. Problema"},{"location":"apresentacao/#2-solucao","text":"Criamos uma API RESTful para gerenciamento de campanhas solid\u00e1rias com: Cadastro e edi\u00e7\u00e3o de campanhas; Autentica\u00e7\u00e3o de usu\u00e1rios; Registro de feedbacks; Integra\u00e7\u00e3o com front-ends; Organiza\u00e7\u00e3o centralizada de dados. Ideal para ONGs, escolas e grupos de voluntariado.","title":"\ud83d\udca1 2. Solu\u00e7\u00e3o"},{"location":"apresentacao/#3-processo-de-elaboracao","text":"An\u00e1lise de problema e escopo; Modelagem de dados (PostgreSQL); CRUDs com Node.js, Express e Prisma ORM; Separa\u00e7\u00e3o em rotas, controllers, services e middlewares; Autentica\u00e7\u00e3o e autoriza\u00e7\u00e3o; Testes com Jest (mais de 50% de cobertura); Documenta\u00e7\u00e3o Swagger; Deploy com Render + banco Neon.","title":"\u2699\ufe0f 3. Processo de Elabora\u00e7\u00e3o"},{"location":"apresentacao/#4-utilidade-do-sistema","text":"Gerenciar campanhas; Divulgar locais de doa\u00e7\u00e3o; Organizar categorias de doa\u00e7\u00f5es; Coletar feedbacks; Seguran\u00e7a via controle de usu\u00e1rios. Pronto para integra\u00e7\u00e3o com qualquer frontend.","title":"\ud83e\udde0 4. Utilidade do Sistema"},{"location":"hospedagem/","text":"\ud83c\udf10 Hospedagem \ud83d\udd17 API hospedada: https://m4-projeto-final-qvw6.onrender.com/ \ud83d\uddc3\ufe0f Banco de Dados (Neon PostgreSQL): postgresql://neondb_owner:npg_nS5WzIhdR4FP@ep-proud-hall-a5pcife5-pooler.us-east-2.aws.neon.tech/neondb?sslmode=require","title":"Hospedagem"},{"location":"hospedagem/#hospedagem","text":"","title":"\ud83c\udf10 Hospedagem"},{"location":"hospedagem/#api-hospedada","text":"https://m4-projeto-final-qvw6.onrender.com/","title":"\ud83d\udd17 API hospedada:"},{"location":"hospedagem/#banco-de-dados-neon-postgresql","text":"postgresql://neondb_owner:npg_nS5WzIhdR4FP@ep-proud-hall-a5pcife5-pooler.us-east-2.aws.neon.tech/neondb?sslmode=require","title":"\ud83d\uddc3\ufe0f Banco de Dados (Neon PostgreSQL):"},{"location":"integrantes/","text":"\ud83d\udc65 Integrantes e GitHub Nome GitHub Maria J\u00falia @MariaJuliaBat Igor Rodrigues @igorrxz Eduardo Lopes @EduardolopesPDA Luana Aguilar @LuanaAguilar2 Odilon Santos @Odilonskt D\u00e9sir\u00e9e Moura @Desiree2522 Jo\u00e3o Lopes Filho @JoaoLopesFilho","title":"Integrantes"},{"location":"integrantes/#integrantes-e-github","text":"Nome GitHub Maria J\u00falia @MariaJuliaBat Igor Rodrigues @igorrxz Eduardo Lopes @EduardolopesPDA Luana Aguilar @LuanaAguilar2 Odilon Santos @Odilonskt D\u00e9sir\u00e9e Moura @Desiree2522 Jo\u00e3o Lopes Filho @JoaoLopesFilho","title":"\ud83d\udc65 Integrantes e GitHub"},{"location":"tecnologias/","text":"\ud83d\udee0\ufe0f Tecnologias Utilizadas A API foi constru\u00edda com as seguintes tecnologias: Node.js \u2013 ambiente de execu\u00e7\u00e3o; Express.js \u2013 framework web para rotas e middleware; Prisma ORM \u2013 mapeamento objeto-relacional; PostgreSQL (NeonDB) \u2013 banco de dados relacional; Jest \u2013 testes automatizados nas rotas; Swagger \u2013 documenta\u00e7\u00e3o autom\u00e1tica da API; MkDocs \u2013 documenta\u00e7\u00e3o do projeto; CORS Middleware \u2013 seguran\u00e7a de acesso; Render \u2013 hospedagem da API.","title":"Tecnologias"},{"location":"tecnologias/#tecnologias-utilizadas","text":"A API foi constru\u00edda com as seguintes tecnologias: Node.js \u2013 ambiente de execu\u00e7\u00e3o; Express.js \u2013 framework web para rotas e middleware; Prisma ORM \u2013 mapeamento objeto-relacional; PostgreSQL (NeonDB) \u2013 banco de dados relacional; Jest \u2013 testes automatizados nas rotas; Swagger \u2013 documenta\u00e7\u00e3o autom\u00e1tica da API; MkDocs \u2013 documenta\u00e7\u00e3o do projeto; CORS Middleware \u2013 seguran\u00e7a de acesso; Render \u2013 hospedagem da API.","title":"\ud83d\udee0\ufe0f Tecnologias Utilizadas"}]}